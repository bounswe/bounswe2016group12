# -*- coding: utf-8 -*-
# Generated by Django 1.10.3 on 2016-11-12 16:48
from __future__ import unicode_literals

import MeancoApp.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vote_count', models.IntegerField(default=0)),
                ('boost_count', models.IntegerField(default=0)),
                ('boost_timestamp', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='CommentVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='MeancoApp.Comment')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='CommentVoter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=False)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='MeancoApp.Comment')),
                ('comment_version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='MeancoApp.CommentVersion')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asd', models.IntegerField(default=0)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Relation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='RelationLabel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('direction', models.NullBooleanField(default=None)),
                ('text', models.CharField(default='related', max_length=20)),
                ('vote_count', models.IntegerField(default=0)),
                ('boost_count', models.IntegerField(default=0)),
                ('boost_timestamp', models.DateTimeField()),
                ('profile', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='relations', to='MeancoApp.Profile')),
                ('relation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='labels', to='MeancoApp.Relation')),
            ],
        ),
        migrations.CreateModel(
            name='RelationLabelVoter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=False)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='MeancoApp.Profile')),
                ('relation_label', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='voters', to='MeancoApp.RelationLabel')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=20)),
                ('context', models.CharField(max_length=20)),
                ('url', models.URLField()),
                ('view_count', models.IntegerField(default=0)),
                ('topic_count', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment_count', models.IntegerField(default=0)),
                ('view_count', models.IntegerField(default=1)),
                ('timestamp_last', models.DateTimeField(auto_now=True)),
                ('timestamp_first', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='TopicName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('vote_count', models.IntegerField()),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='names', to='MeancoApp.Topic')),
            ],
            options={
                'ordering': ['-vote_count'],
            },
        ),
        migrations.CreateModel(
            name='TopicNameVoter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='MeancoApp.Profile')),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='MeancoApp.Topic')),
                ('topic_name', models.ForeignKey(default=MeancoApp.models.TopicNameVoter.get_current_name, on_delete=django.db.models.deletion.SET_DEFAULT, to='MeancoApp.TopicName')),
            ],
        ),
        migrations.CreateModel(
            name='TopicTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='topictags', to='MeancoApp.Profile')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='topics', to='MeancoApp.Tag')),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tags', to='MeancoApp.Topic')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='tag',
            unique_together=set([('label', 'context'), ('url',)]),
        ),
        migrations.AddField(
            model_name='relation',
            name='topic_a',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relations_a', to='MeancoApp.Topic'),
        ),
        migrations.AddField(
            model_name='relation',
            name='topic_b',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relations_b', to='MeancoApp.Topic'),
        ),
        migrations.AddField(
            model_name='commentvoter',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='MeancoApp.Profile'),
        ),
        migrations.AddField(
            model_name='comment',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='MeancoApp.Profile'),
        ),
        migrations.AddField(
            model_name='comment',
            name='topic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='MeancoApp.Topic'),
        ),
        migrations.AlterUniqueTogether(
            name='topictag',
            unique_together=set([('topic', 'tag')]),
        ),
        migrations.AlterUniqueTogether(
            name='topicnamevoter',
            unique_together=set([('profile', 'topic_name'), ('topic', 'profile'), ('topic', 'topic_name')]),
        ),
        migrations.AlterUniqueTogether(
            name='topicname',
            unique_together=set([('topic', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='relationlabelvoter',
            unique_together=set([('profile', 'relation_label')]),
        ),
        migrations.AlterUniqueTogether(
            name='relationlabel',
            unique_together=set([('relation', 'direction', 'text')]),
        ),
        migrations.AlterUniqueTogether(
            name='relation',
            unique_together=set([('topic_a', 'topic_b')]),
        ),
        migrations.AlterUniqueTogether(
            name='commentvoter',
            unique_together=set([('profile', 'comment'), ('profile', 'comment_version')]),
        ),
        migrations.AlterUniqueTogether(
            name='commentversion',
            unique_together=set([('comment', 'timestamp')]),
        ),
    ]
