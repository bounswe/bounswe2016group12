-- Test Plan --

-----------------------------------------------------------
-----------------------------------------------------------

This document is a draft, and shall be made into a test_plan.md eventually
with its own GitHub Wiki page.

Style:
1) Usage of singular "they" shall be prefferred over "he/she".
2) Use 60 many dashes to separate between subsections.
3) Use 2 rows of 60 many dashes to separate between sections.
4) Pad the IDs for the TCs with zeroes from left.

Considerations:
1) We may group the test cases according to their modules.
2) We may sort the test cases according to their priorities.

-----------------------------------------------------------
-----------------------------------------------------------

TC #00: (template)
- Test Priority:    High/Medium/Low
- Module Name:      Registration/Login/Search/...
- Test Title:       Successfully signing up with a valid test-case
- Purpose:          To test if a user can successfully sign up with a valid test-case
- Designer:         Utkan Gezer/Ezgi Tekdemir/...
- Design Date:      23.03.2016
- Related Req.:     0.1.1.

- Preconditions:
--- User should have their eyes open.
--- User should have previously seen this web page.

- Steps to take ==> Postconditions:
--- 1: Navigate to the test cases page. ==> Test cases page should be on screen.
--- 2: Close the browser. ==> Browser should be closed.

-----------------------------------------------------------

TC #01:
- Test Priority:    High/Medium/Low
- Module Name:      Authorization
- Test Title:       Signing up with a valid email and password
- Purpose:          To test if a user will be able to sign up with a valid email and password.
- Designer:         Utkan Gezer
- Design Date:      23.03.2016
- Related Req.:     1.1.1.

- Preconditions:
--- -

- Steps to take ==> Postconditions:
--- 1: Navigate to the sign-up page.
   ==> Registration form with an email and a password field should appear.
       Form should be submittable.
--- 2: Enter a random valid email address. May use the following: https://fightingforalostcause.net/content/misc/2006/compare-email-regex.php
       Enter a random valid password. Specifications are TBD.
       Submit the form.
   ==> Form should get accepted.
       Account should get created and should be ready to get activated.

-----------------------------------------------------------

TC #02:
- Test Priority:    High/Medium/Low
- Module Name:      Authorization
- Test Title:       Logging in with credentials
- Purpose:          To test if a member will be able to log in.
- Designer:         Utkan Gezer
- Design Date:      23.03.2016
- Related Req.:     1.1.2.

- Preconditions:
--- There should be active accounts along with their associated emails and passwords.

- Steps to take ==> Postconditions:
--- 1: Navigate to the log-in page.
   ==> Log-in form with an email and a password field should appear.
       Form should be submittable.
--- 2: Pick an account.
       Enter its associated email to the email field.
       Enter its associated password to the password field.
       Submit the form.
   ==> Form should get accepted.
       Application should now have elements indicating that the user is now logged in.

-----------------------------------------------------------

TC #03:
- Test Priority:    High/Medium/Low
- Module Name:      Authorization
- Test Title:       Recover account with forgotten password
- Purpose:          To test if it is possible to recover an account with a forgotten password
- Designer:         Utkan Gezer
- Design Date:      23.03.2016
- Related Req.:     1.1.3.

- Preconditions:
--- There should be active user accounts.
--- Email accounts associated with the user accounts should be in reach.

- Steps to take ==> Postconditions:
--- 1: Navigate to the log-in page.
   ==> A link should read "password recovery", "forgot my password" or something similar. Specifications are TBD.
--- 2: Navigate to the password recovery form.
   ==> A form with email field should appear.
       Some text should inform the user about the recovery process.
--- 3: Provide the email associated with the account and submit the form.
   ==> Application shall create a page with a form to change the password of the associated account.
       Application shall send an email to the associated account with the link to this page.
       Success message should appear.
       User should be informed about how to proceed.
--- 4: Follow the link on the email.
   ==> A form to change the password of the associated account shall appear.
--- 5: Put down a password, different than the previous one if possible, into the field.
       Submit the form.
   ==> Success message shall appear.
--- 6: Navigate back to the log-in page and log in with the email and the new password.
   ==> Log-in should be successful.

-----------------------------------------------------------

TC #04:
- Test Priority:    High/Medium/Low
- Module Name:      Authorization
- Test Title:       Log out
- Purpose:          To test if it is possible to log out
- Designer:         Utkan Gezer
- Design Date:      24.03.2016
- Related Req.:     1.1.4.

- Preconditions:
--- User should be logged in.

- Steps to take ==> Postconditions:
--- 1: Log out.
   ==> Application should now have less elements indicating that it is being viewed by a guest.

-----------------------------------------------------------

TC #05:
- Test Priority:    High/Medium/Low
- Module Name:      Privileges
- Test Title:       Viewing questions and answers as a guest
- Purpose:          To test if a guest user can view the questions and answers
- Designer:         Utkan Gezer
- Design Date:      24.03.2016
- Related Req.:     1.2.1.1.

- Preconditions:
--- User should NOT be logged in.
--- There should be a question which is known to have an answer.

- Steps to take ==> Postconditions:
--- 1: Navigate to the question known to have an answer.
   ==> Content related to the specific question should appear.
       Question and its answer should be viewable.

-----------------------------------------------------------

TC #06:
- Test Priority:    High/Medium/Low
- Module Name:      Privileges
- Test Title:       Viewing URLs as a guest
- Purpose:          To test if a guest user can view the URL
- Designer:         Utkan Gezer
- Design Date:      24.03.2016
- Related Req.:     1.2.1.2.

- Preconditions:
--- User should NOT be logged in.
--- There should be a post which is known to have a URL.

- Steps to take ==> Postconditions:
--- 1: Navigate to the post known to have a URL.
   ==> The URL within the post should at least be viewable.

-----------------------------------------------------------

TC #07:
- Test Priority:    High/Medium/Low
- Module Name:      Privileges
- Test Title:       Viewing multimedia as a guest
- Purpose:          To test if a guest user can view the multimedia content
- Designer:         Utkan Gezer
- Design Date:      24.03.2016
- Related Req.:     1.2.1.2.

- Preconditions:
--- User should NOT be logged in.
--- There should be some posts A_n which are known to have various types of multimedia content.

- Steps to take ==> Postconditions:
--- 1: For k from 1 to n, navigate to the post A_k known to have some multimedia content.
   ==> The multimedia content within the post should be viewable.

-----------------------------------------------------------

TC #08:
- Test Priority:    High/Medium/Low
- Module Name:      Privileges
- Test Title:       Viewing the trending topics as a guest
- Purpose:          To test if a guest user can view the trending topics
- Designer:         Utkan Gezer
- Design Date:      24.03.2016
- Related Req.:     1.2.1.3.

- Preconditions:
--- User should NOT be logged in.

- Steps to take ==> Postconditions:
--- 1: Navigate to the homepage.
   ==> Trending topics should be viewable.

-----------------------------------------------------------

TC #09:
- Test Priority:    High/Medium/Low
- Module Name:      Privileges
- Test Title:       Reporting a post to be inappropriate as a member
- Purpose:          To test if a member user can report a post to be inappropriate
- Designer:         Utkan Gezer
- Design Date:      24.03.2016
- Related Req.:     1.2.2.1.

- Preconditions:
--- User should be logged in.
--- There should be a post.

- Steps to take ==> Postconditions:
--- 1: Navigate to any post.
   ==> Post should be on the view with a report facility in the vicinity.
--- 2: Activate the report facility.
   ==> A form to provide inquiry details should appear.
--- 3: Fill the form with some not-necessarily-correct information and submit the report.
   ==> Success message should appear, possibly after a confirmation for the submission.

-----------------------------------------------------------

TC #10:
- Test Priority:    High/Medium/Low
- Module Name:      Privileges
- Test Title:       Providing personal information as a member
- Purpose:          To test if a member user can provide their personal information on their profile page
- Designer:         Utkan Gezer
- Design Date:      24.03.2016
- Related Req.:     1.2.2.2.

- Preconditions:
--- User should be logged in.

- Steps to take ==> Postconditions:
--- 1: Navigate to the user's profile page.
   ==> The profile page of the user should appear.
       There should be a facility to edit.
--- 2: Activate the editing facility.
   ==> The profile page should now be editable.
       There should be a facility to submit changes.
--- 3: Make some not-necessarily-meaningful changes, and submit.
   ==> The profile page of the user should appear with the new information.

-----------------------------------------------------------

TC #11:
- Test Priority:    High/Medium/Low
- Module Name:      Privileges
- Test Title:       Providing a profile picture as a member
- Purpose:          To test if a member user can provide a picture for their profile
- Designer:         Utkan Gezer
- Design Date:      24.03.2016
- Related Req.:     1.2.2.3.

- Preconditions:
--- User should be logged in.

- Steps to take ==> Postconditions:
--- 1: Navigate to the user's profile page.
   ==> The profile page of the user should appear.
       There should be a facility to change the profile picture.
--- 2: Activate the facility for changing the profile picture.
   ==> There should be a dialog to provide a new profile picture.
--- 3: Provide a new profile picture.
   ==> The dialog form should now be submittable.
--- 4: Submit the dialog form.
   ==> The profile page of the user should appear with the new profile picture.

-----------------------------------------------------------
