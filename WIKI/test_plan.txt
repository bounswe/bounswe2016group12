-- Test Plan --

-----------------------------------------------------------
-----------------------------------------------------------

This document is a draft, and shall be made into a test_plan.md eventually
with its own GitHub Wiki page.

Style:
1) Usage of singular "they" shall be prefferred over "he/she".
2) Use 60 many dashes to separate between subsections.
3) Use 2 rows of 60 many dashes to separate between sections.

Considerations:
1) We may group the test cases according to their modules.
2) We may sort the test cases according to their priorities.

-----------------------------------------------------------
-----------------------------------------------------------

TC #0: (template)
- Test Priority:    High/Medium/Low
- Module Name:      Registration/Login/Search/...
- Test Title:       Successfully signing up with a valid test-case
- Purpose:          To test if a user can successfully sign up with a valid test-case
- Designer:         Utkan Gezer/Ezgi Tekdemir/...
- Design Date:      23.03.2016
- Related Req.:     0.1.1.

- Preconditions:
--- User should have their eyes open.
--- User should have previously seen this web page.

- Steps to take ==> Postconditions:
--- 1: Navigate to the test cases page. ==> Test cases page should be on screen.
--- 2: Close the browser. ==> Browser should be closed.

-----------------------------------------------------------

TC #1:
- Test Priority:    High/Medium/Low
- Module Name:      Authorization
- Test Title:       Signing up with a valid email and password
- Purpose:          To test if a user will be able to sign up with a valid email and password.
- Designer:         Utkan Gezer
- Design Date:      23.03.2016
- Related Req.:     1.1.1.

- Preconditions:
--- -

- Steps to take ==> Postconditions:
--- 1: Navigate to the sign-up page.
   ==> Registration form with an email and a password field should appear.
       Form should be submittable.
--- 2: Enter a random valid email address. May use the following: https://fightingforalostcause.net/content/misc/2006/compare-email-regex.php
       Enter a random valid password. Specifications are TBD.
       Submit the form.
   ==> Form should get accepted.
       Account should get created and should be ready to get activated.

-----------------------------------------------------------

TC #2:
- Test Priority:    High/Medium/Low
- Module Name:      Authorization
- Test Title:       Logging in with credentials
- Purpose:          To test if a member will be able to log in.
- Designer:         Utkan Gezer
- Design Date:      23.03.2016
- Related Req.:     1.1.2.

- Preconditions:
--- There should be active accounts along with their associated emails and passwords.

- Steps to take ==> Postconditions:
--- 1: Navigate to the log-in page.
   ==> Log-in form with an email and a password field should appear.
       Form should be submittable.
--- 2: Pick an account.
       Enter its associated email to the email field.
       Enter its associated password to the password field.
       Submit the form.
   ==> Form should get accepted.
       Application should now have elements indicating that the user is now logged in.

-----------------------------------------------------------

TC #3:
- Test Priority:    High/Medium/Low
- Module Name:      Authorization
- Test Title:       Recover account with forgotten password
- Purpose:          To test if it is possible to recover an account with a forgotten password
- Designer:         Utkan Gezer
- Design Date:      23.03.2016
- Related Req.:     1.1.3.

- Preconditions:
--- There should be active user accounts.
--- Email accounts associated with the user accounts should be in reach.

- Steps to take ==> Postconditions:
--- 1: Navigate to the log-in page.
   ==> A link should read "password recovery", "forgot my password" or something similar. Specifications are TBD.
--- 2: Navigate to the password recovery form.
   ==> A form with email field should appear.
       Some text should inform the user about the recovery process.
--- 3: Provide the email associated with the account and submit the form.
   ==> Application shall create a page with a form to change the password of the associated account.
       Application shall send an email to the associated account with the link to this page.
       Success message should appear.
       User should be informed about how to proceed.
--- 4: Follow the link on the email.
   ==> A form to change the password of the associated account shall appear.
--- 5: Put down a password, different than the previous one if possible, into the field.
       Submit the form.
   ==> Success message shall appear.
--- 6: Navigate back to the log-in page and log in with the email and the new password.
   ==> Log-in should be successful.

-----------------------------------------------------------

TC #4:
- Test Priority:    High/Medium/Low
- Module Name:      Authorization
- Test Title:       Log out
- Purpose:          To test if it is possible to log out
- Designer:         Utkan Gezer
- Design Date:      24.03.2016
- Related Req.:     1.1.4.

- Preconditions:
--- User should be logged in.

- Steps to take ==> Postconditions:
--- 1: Log out.
   ==> Application should now have less elements indicating that it is being viewed by a guest.

-----------------------------------------------------------

TC #5:
- Test Priority:    High/Medium/Low
- Module Name:      Privileges
- Test Title:       Viewing questions and answers as a guest
- Purpose:          To test if a guest user can view the questions and answers
- Designer:         Utkan Gezer
- Design Date:      24.03.2016
- Related Req.:     1.2.1.1.

- Preconditions:
--- User should NOT be logged in.

- Steps to take ==> Postconditions:
--- 1: Log out.
   ==> Application should now have less elements indicating that it is being viewed by a guest.

-----------------------------------------------------------
